.if-deploy-local: &if-deploy-local
  if: '$CI_COMMIT_TAG =~ /local/'

.if-deploy-sit: &if-deploy-sit
  if: '$CI_COMMIT_TAG =~ /sit/'

.if-deploy-uat: &if-deploy-uat
  if: '$CI_COMMIT_TAG =~ /uat/'

variables:
  SONAR_USER_HOME: '${CI_PROJECT_DIR}/.sonar' # Defines the location of the analysis task cache
  GIT_DEPTH: 0 # Tells git to fetch all the branches of the project, required by the analysis task
  SRC_PATH: src
  TEST_PATH: src

cache:
  key: ${CI_JOB_NAME}
  paths:
    - .sonar/cache

sonarqube-check:
  stage: post-test
  needs: ['unit-test-js']
  image:
    name: registry.nexdev.net:5050/docker/sonarsource/sonar-scanner-cli:latest
  before_script:
    - echo "===========Start Sonar Scanner============="
    - if [ "$PROJECT_NAME" == "" ];
      then
      export PROJECT_NAME=$SERVICE_NAME;
      else
      echo "$PROJECT_NAME";
      fi
    - echo "$SRC_PATH";
    - npm set registry http://npm.lumigame.com
    - npm rebuild
    - npm install -g typescript
  script:
    - sonar-scanner
      -X
      -Dsonar.sourceEncoding=UTF-8
      -Dsonar.qualitygate.wait=true
      -Dsonar.projectKey=$PROJECT_NAME
      -Dsonar.projectVersion="${CI_COMMIT_REF_NAME} ($CI_COMMIT_SHORT_SHA) [${CI_JOB_ID}]"
      -Dproject.settings=./sonarqube.analysis.properties
      -Dsonar.javascript.lcov.reportPaths=./coverage/lcov.info
      -Dsonar.testExecutionReportPaths=./reports/test-reporter.xml
      -Dsonar.sources=${SRC_PATH}
      -Dsonar.tests=${TEST_PATH}
      -Dsonar.test.inclusions=**/__tests__/**
      # -Dsonar.exclusions=**/__tests__/**
  allow_failure: true
  rules:
    - <<: *if-deploy-local
      when: never
    - <<: *if-deploy-sit
      when: never
    - <<: *if-deploy-uat
      when: never
    - when: always
