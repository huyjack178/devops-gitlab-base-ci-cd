variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar" # Defines the location of the analysis task cache
    GIT_DEPTH: 0 # Tells git to fetch all the branches of the project, required by the analysis task

sonarqube-dotnet-check:
    stage: test
    needs: ["dotnet-unittest"]
    dependencies: 
        - dotnet-unittest
    image:
        name: git3.nexdev.net:5050/lumi-ops/docker-images/java-dotnet
    before_script:
        - dotnet tool install --global dotnet-sonarscanner --version 4.10.0
        - export PATH="$PATH:/root/.dotnet/tools"
        - echo "===========Start Sonar Scanner============="
    script:
        - ls
        - dotnet sonarscanner begin /k:$PROJECT_NAME 
           /v:"${CI_COMMIT_REF_NAME} ($CI_COMMIT_SHORT_SHA) [${CI_JOB_ID}]" 
           /d:sonar.login=$SONAR_TOKEN 
           /d:sonar.host.url=$SONAR_HOST_URL
           /d:sonar.cs.opencover.reportsPaths=./*coverage.opencover.xml
           /d:sonar.cs.vstest.reportsPaths=./*.trx	
        - dotnet build $SOLUTION_NAME
        - dotnet sonarscanner end /d:sonar.login=$SONAR_TOKEN
    allow_failure: true
