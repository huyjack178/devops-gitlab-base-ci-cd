.base_deploy_stack_swarm:
  stage: deploy
  script:
    #- ssh -o ProxyCommand="${PROXY_SSH_COMMAND}" -o StrictHostKeyChecking=no -p $SERVER_PORT $SERVER_USER@$SERVER_IP  docker login -u $DOCKER_REG_USERNAME -p $DOCKER_REG_PASSWORD $DOCKER_REG_URL;
    #- ssh -o ProxyCommand="${PROXY_SSH_COMMAND}" -o StrictHostKeyChecking=no -p $SERVER_PORT $SERVER_USER@$SERVER_IP "mkdir -p $WORKING_PATH/$DEPLOY_ENV/configs";
    - curl -v -F host=$SERVER_IP -F port=$SERVER_PORT -F user=$SERVER_USER -F command="docker login -u $DOCKER_REG_USERNAME -p $DOCKER_REG_PASSWORD $DOCKER_REG_URL" $DEPLOYMENT_API/command
    - curl -v -F host=$SERVER_IP -F port=$SERVER_PORT -F user=$SERVER_USER -F command="mkdir -p $WORKING_PATH/$DEPLOY_ENV/configs" $DEPLOYMENT_API/command
    - echo "===========Transform docker-compose.yml=============";
    - export DOCKER_COMPOSE_FILE=${DEPLOY_ENV}.$DOCKER_COMPOSE_FILE_NAME.yml;
    - echo $DOCKER_COMPOSE_FILE
    - echo $SWARM_NODES
    - git clone $DOCKER_COMPOSE_REPO_URL compose_repo
    - cp compose_repo/$DOCKER_COMPOSE_REPO_PATH/$DOCKER_COMPOSE_FILE $DOCKER_COMPOSE_FILE_PATH
    - echo "===========Sync docker-compose.yml============="
    - curl -v -F host=$SERVER_IP -F port=$SERVER_PORT -F user=$SERVER_USER -F remotePath="$WORKING_PATH/$DEPLOY_ENV/docker-compose.yml" -F file=@"$DOCKER_COMPOSE_FILE_PATH/$DOCKER_COMPOSE_FILE" $DEPLOYMENT_API/scp
    - echo "===========Sync configs============="
    - if [ ! -z "$CONFIG_FILE_NAME" ];
      then
        curl -v -F host=$SERVER_IP -F port=$SERVER_PORT -F user=$SERVER_USER -F remotePath="$WORKING_PATH/$DEPLOY_ENV/configs/$CONFIG_DEST_FILE" -F file=@"$CONFIG_FILE_PATH/$CONFIG_FILE" $DEPLOYMENT_API/scp;
      fi
    - if [ ! -z "$SP_FILE_NAME" ];
      then
        export SP_ENV=$(echo ${DEPLOY_ENV}| cut -d'_' -f 1);
        export SP_FILE=$SP_FILE_NAME.${SP_ENV}.$SP_FILE_EXTENSION;
        curl -v -F host=$SERVER_IP -F port=$SERVER_PORT -F user=$SERVER_USER -F remotePath="$WORKING_PATH/$DEPLOY_ENV/configs/$SP_FILE_NAME.$SP_FILE_EXTENSION" -F file=@"$SP_FILE_PATH/$SP_FILE" $DEPLOYMENT_API/scp;
      fi
    - curl -v -F host=$SERVER_IP -F port=$SERVER_PORT -F user=$SERVER_USER -F command="docker service rm ${SERVICE_NAME}_${DEPLOY_ENV} || true" $DEPLOYMENT_API/command
    - curl -v -F host=$SERVER_IP -F port=$SERVER_PORT -F user=$SERVER_USER -F command="docker config rm ${SERVICE_NAME}_${DEPLOY_ENV}_config || true" $DEPLOYMENT_API/command;
    - curl -v -F host=$SERVER_IP -F port=$SERVER_PORT -F user=$SERVER_USER -F command="docker config rm ${SERVICE_NAME}_${DEPLOY_ENV}_sp_config || true" $DEPLOYMENT_API/command;
    - curl -v -F host=$SERVER_IP -F port=$SERVER_PORT -F user=$SERVER_USER -F command="cd $WORKING_PATH/$DEPLOY_ENV  && docker stack deploy --compose-file=docker-compose.yml --with-registry-auth $STACK_NAME" $DEPLOYMENT_API/command;
  tags:
    - docker